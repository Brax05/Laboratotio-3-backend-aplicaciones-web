{"ast":null,"code":"const API_URL = 'http://localhost:5000/api';\nexport async function loginUser(email, password) {\n  const res = await fetch(`${API_URL}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.msg || 'Error login');\n  return data.access_token;\n}\nexport async function registerUser(name, email, password) {\n  const res = await fetch(`${API_URL}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      password\n    })\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.msg || 'Error registro');\n  return data.msg;\n}\nexport async function getTasks(token) {\n  const res = await fetch(`${API_URL}/tasks`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error('Error obteniendo tareas');\n  return res.json();\n}\nexport async function createTask(token, task) {\n  const res = await fetch(`${API_URL}/tasks`, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  });\n  if (!res.ok) throw new Error('Error creando tarea');\n  return res.json();\n}\nexport async function updateTask(token, taskId, updatedTask) {\n  const res = await fetch(`${API_URL}/tasks/${taskId}`, {\n    method: 'PUT',\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updatedTask)\n  });\n  if (!res.ok) throw new Error('Error actualizando tarea');\n  return res.json();\n}\nexport async function deleteTask(token, taskId) {\n  const res = await fetch(`${API_URL}/tasks/${taskId}`, {\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error('Error eliminando tarea');\n  return res.json();\n}","map":{"version":3,"names":["API_URL","loginUser","email","password","res","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","msg","access_token","registerUser","name","getTasks","token","Authorization","createTask","task","updateTask","taskId","updatedTask","deleteTask"],"sources":["/home/brax/Escritorio/Codigo/mi-gestor-tareas/frontend/src/api.js"],"sourcesContent":["const API_URL = 'http://localhost:5000/api';\n\nexport async function loginUser(email, password) {\n  const res = await fetch(`${API_URL}/auth/login`, {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({ email, password })\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.msg || 'Error login');\n  return data.access_token;\n}\n\nexport async function registerUser(name, email, password) {\n  const res = await fetch(`${API_URL}/auth/register`, {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({ name, email, password })\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.msg || 'Error registro');\n  return data.msg;\n}\n\nexport async function getTasks(token) {\n  const res = await fetch(`${API_URL}/tasks`, {\n    headers: { Authorization: `Bearer ${token}` }\n  });\n  if (!res.ok) throw new Error('Error obteniendo tareas');\n  return res.json();\n}\n\nexport async function createTask(token, task) {\n  const res = await fetch(`${API_URL}/tasks`, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  });\n  if (!res.ok) throw new Error('Error creando tarea');\n  return res.json();\n}\n\nexport async function updateTask(token, taskId, updatedTask) {\n  const res = await fetch(`${API_URL}/tasks/${taskId}`, {\n    method: 'PUT',\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updatedTask)\n  });\n  if (!res.ok) throw new Error('Error actualizando tarea');\n  return res.json();\n}\n\nexport async function deleteTask(token, taskId) {\n  const res = await fetch(`${API_URL}/tasks/${taskId}`, {\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error('Error eliminando tarea');\n  return res.json();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}