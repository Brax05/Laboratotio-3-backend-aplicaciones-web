{"ast":null,"code":"var _jsxFileName = \"/home/brax/Escritorio/Codigo/mi-gestor-tareas/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api';\nfunction Dashboard({\n  token\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  // Cargar tareas\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(`${API_URL}/tasks`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Error cargando tareas');\n      const tasksData = await response.json();\n      setTasks(tasksData);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, [token]);\n\n  // Crear tarea\n  const handleCreate = async () => {\n    if (!title) {\n      setError('El título es obligatorio');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/tasks`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          title,\n          description\n        })\n      });\n      if (!response.ok) throw new Error('Error creando tarea');\n      const newTask = await response.json();\n      setTasks(prev => [...prev, newTask]);\n      setTitle('');\n      setDescription('');\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Actualizar tarea\n  const handleUpdate = async (taskId, updatedFields) => {\n    if (!taskId) {\n      setError('ID de tarea inválido');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/tasks/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(updatedFields)\n      });\n      if (!response.ok) throw new Error('Error actualizando tarea');\n      const updatedTask = await response.json();\n      setTasks(tasks.map(t => t.id === taskId ? updatedTask : t));\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Eliminar tarea\n  const handleDelete = async taskId => {\n    if (!taskId) {\n      setError('ID de tarea inválido');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Error eliminando tarea');\n      await response.json();\n      setTasks(prevTasks => prevTasks.filter(t => t.id !== taskId));\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"T\\xEDtulo\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Descripci\\xF3n\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreate,\n        children: \"Agregar Tarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay tareas.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), \" - \", task.status, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdate(task.id, {\n            status: 'En progreso',\n            title: task.title,\n            description: task.description\n          }),\n          children: \"En progreso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdate(task.id, {\n            status: 'Completadas',\n            title: task.title,\n            description: task.description\n          }),\n          children: \"Completar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(task.id),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"iE0L1AA0mqdHvdbBW2QfkzdX4Vs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_URL","Dashboard","token","_s","tasks","setTasks","error","setError","title","setTitle","description","setDescription","fetchTasks","response","fetch","headers","Authorization","ok","Error","tasksData","json","err","message","handleCreate","method","body","JSON","stringify","newTask","prev","handleUpdate","taskId","updatedFields","updatedTask","map","t","id","handleDelete","prevTasks","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","length","task","status","_c","$RefreshReg$"],"sources":["/home/brax/Escritorio/Codigo/mi-gestor-tareas/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst API_URL = 'http://localhost:5000/api';\n\nfunction Dashboard({ token }) {\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  // Cargar tareas\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(`${API_URL}/tasks`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      if (!response.ok) throw new Error('Error cargando tareas');\n      const tasksData = await response.json();\n      setTasks(tasksData);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, [token]);\n\n  // Crear tarea\n  const handleCreate = async () => {\n    if (!title) {\n      setError('El título es obligatorio');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/tasks`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ title, description }),\n      });\n      if (!response.ok) throw new Error('Error creando tarea');\n      const newTask = await response.json();\n      setTasks(prev => [...prev, newTask]);\n      setTitle('');\n      setDescription('');\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Actualizar tarea\n  const handleUpdate = async (taskId, updatedFields) => {\n    if (!taskId) {\n      setError('ID de tarea inválido');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/tasks/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(updatedFields),\n      });\n      if (!response.ok) throw new Error('Error actualizando tarea');\n      const updatedTask = await response.json();\n      setTasks(tasks.map(t => (t.id === taskId ? updatedTask : t)));\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Eliminar tarea\n  const handleDelete = async (taskId) => {\n    if (!taskId) {\n      setError('ID de tarea inválido');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      if (!response.ok) throw new Error('Error eliminando tarea');\n      await response.json();\n      setTasks(prevTasks => prevTasks.filter(t => t.id !== taskId));\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Dashboard de Tareas</h2>\n\n      {/* Formulario para crear nuevas tareas */}\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Título\"\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Descripción\"\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n        />\n        <button onClick={handleCreate}>Agregar Tarea</button>\n      </div>\n\n      {/* Mostrar error si existe */}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {/* Listado de tareas */}\n      {tasks.length === 0 ? (\n        <p>No hay tareas.</p>\n      ) : (\n        <ul>\n          {tasks.map(task => (\n            <li key={task.id}>\n              <strong>{task.title}</strong> - {task.status}\n              <p>{task.description}</p>\n              <button\n                onClick={() =>\n                  handleUpdate(task.id, {\n                    status: 'En progreso',\n                    title: task.title,\n                    description: task.description,\n                  })\n                }\n              >\n                En progreso\n              </button>\n              <button\n                onClick={() =>\n                  handleUpdate(task.id, {\n                    status: 'Completadas',\n                    title: task.title,\n                    description: task.description,\n                  })\n                }\n              >\n                Completar\n              </button>\n              <button onClick={() => handleDelete(task.id)}>Eliminar</button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}