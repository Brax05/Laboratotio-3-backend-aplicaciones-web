{"ast":null,"code":"var _jsxFileName = \"/home/brax/Escritorio/Codigo/mi-gestor-tareas/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getTasks, createTask, updateTask, deleteTask } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  token\n}) {\n  _s();\n  const [tasks, setTasks] = React.useState([]);\n  const [error, setError] = React.useState('');\n\n  // Cargar tareas\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(`${API_URL}/tasks`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Error cargando tareas');\n      const tasksData = await response.json();\n      setTasks(tasksData);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  React.useEffect(() => {\n    fetchTasks();\n  }, [token]);\n\n  // Actualizar tarea\n  const handleUpdate = async (taskId, updatedFields) => {\n    if (!taskId) {\n      setError('ID de tarea inv치lido');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/tasks/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(updatedFields)\n      });\n      if (!response.ok) throw new Error('Error actualizando tarea');\n      const updatedTask = await response.json();\n      setTasks(tasks.map(t => t.id === taskId ? updatedTask : t));\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Eliminar tarea\n  const handleDelete = async taskId => {\n    if (!taskId) {\n      setError('ID de tarea inv치lido');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Error eliminando tarea');\n      await response.json();\n      setTasks(tasks.filter(t => t.id !== taskId));\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), \" - \", task.status, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdate(task.id, {\n            status: 'En progreso',\n            title: task.title,\n            description: task.description\n          }),\n          children: \"En progreso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdate(task.id, {\n            status: 'Completadas',\n            title: task.title,\n            description: task.description\n          }),\n          children: \"Completar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(task.id),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"mUY3UIxV7kMIC0enHxY7PEoVTBU=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","getTasks","createTask","updateTask","deleteTask","jsxDEV","_jsxDEV","Dashboard","token","_s","tasks","setTasks","error","setError","fetchTasks","response","fetch","API_URL","headers","Authorization","ok","Error","tasksData","json","err","message","handleUpdate","taskId","updatedFields","method","body","JSON","stringify","updatedTask","map","t","id","handleDelete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","task","title","status","description","onClick","_c","$RefreshReg$"],"sources":["/home/brax/Escritorio/Codigo/mi-gestor-tareas/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getTasks, createTask, updateTask, deleteTask } from '../api';\n\n\nfunction Dashboard({ token }) {\n  const [tasks, setTasks] = React.useState([]);\n  const [error, setError] = React.useState('');\n\n  // Cargar tareas\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(`${API_URL}/tasks`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      if (!response.ok) throw new Error('Error cargando tareas');\n      const tasksData = await response.json();\n      setTasks(tasksData);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  React.useEffect(() => {\n    fetchTasks();\n  }, [token]);\n\n  // Actualizar tarea\n  const handleUpdate = async (taskId, updatedFields) => {\n    if (!taskId) {\n      setError('ID de tarea inv치lido');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/tasks/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(updatedFields),\n      });\n      if (!response.ok) throw new Error('Error actualizando tarea');\n      const updatedTask = await response.json();\n      setTasks(tasks.map(t => (t.id === taskId ? updatedTask : t)));\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Eliminar tarea\n  const handleDelete = async (taskId) => {\n    if (!taskId) {\n      setError('ID de tarea inv치lido');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      if (!response.ok) throw new Error('Error eliminando tarea');\n      await response.json();\n      setTasks(tasks.filter(t => t.id !== taskId));\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Dashboard de Tareas</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <ul>\n        {tasks.map(task => (\n          <li key={task.id}>\n            <strong>{task.title}</strong> - {task.status}\n            <p>{task.description}</p>\n            <button\n              onClick={() =>\n                handleUpdate(task.id, {\n                  status: 'En progreso',\n                  title: task.title,\n                  description: task.description,\n                })\n              }\n            >\n              En progreso\n            </button>\n            <button\n              onClick={() =>\n                handleUpdate(task.id, {\n                  status: 'Completadas',\n                  title: task.title,\n                  description: task.description,\n                })\n              }\n            >\n              Completar\n            </button>\n            <button onClick={() => handleDelete(task.id)}>Eliminar</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}