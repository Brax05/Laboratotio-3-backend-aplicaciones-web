{"ast":null,"code":"var _jsxFileName = \"/home/brax/Escritorio/Codigo/mi-gestor-tareas/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getTasks, createTask, updateTask, deleteTask } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api';\nfunction Dashboard({\n  token\n}) {\n  _s();\n  const [tasks, setTasks] = React.useState([]);\n  const [error, setError] = React.useState('');\n\n  // Cargar tareas\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(`${API_URL}/tasks`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Error cargando tareas');\n      const tasksData = await response.json();\n      setTasks(tasksData);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  React.useEffect(() => {\n    fetchTasks();\n  }, [token]);\n\n  // Actualizar tarea\n  const handleUpdate = async (taskId, updatedFields) => {\n    if (!taskId) {\n      setError('ID de tarea inválido');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/tasks/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(updatedFields)\n      });\n      if (!response.ok) throw new Error('Error actualizando tarea');\n      const updatedTask = await response.json();\n      setTasks(tasks.map(t => t.id === taskId ? updatedTask : t));\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Eliminar tarea\n  const handleDelete = async taskId => {\n    if (!taskId) {\n      setError('ID de tarea inválido');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Error eliminando tarea');\n      await response.json();\n      setTasks(prevTasks => prevTasks.filter(t => t.id !== taskId));\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const handleCreate = async () => {\n    if (!title) {\n      setError('El título es obligatorio');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/tasks`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          title,\n          description\n        })\n      });\n      if (!response.ok) throw new Error('Error creando tarea');\n      const newTask = await response.json();\n      setTasks(prev => [...prev, newTask]);\n      setTitle('');\n      setDescription('');\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), \" - \", task.status, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdate(task.id, {\n            status: 'En progreso',\n            title: task.title,\n            description: task.description\n          }),\n          children: \"En progreso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdate(task.id, {\n            status: 'Completadas',\n            title: task.title,\n            description: task.description\n          }),\n          children: \"Completar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(task.id),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"/nF0+TqqUk9s7Ou2eV/9IbfTqHk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","getTasks","createTask","updateTask","deleteTask","jsxDEV","_jsxDEV","API_URL","Dashboard","token","_s","tasks","setTasks","error","setError","fetchTasks","response","fetch","headers","Authorization","ok","Error","tasksData","json","err","message","handleUpdate","taskId","updatedFields","method","body","JSON","stringify","updatedTask","map","t","id","handleDelete","prevTasks","filter","title","setTitle","description","setDescription","handleCreate","newTask","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","task","status","onClick","_c","$RefreshReg$"],"sources":["/home/brax/Escritorio/Codigo/mi-gestor-tareas/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getTasks, createTask, updateTask, deleteTask } from '../api';\nconst API_URL = 'http://localhost:5000/api';\n\nfunction Dashboard({ token }) {\n  const [tasks, setTasks] = React.useState([]);\n  const [error, setError] = React.useState('');\n\n  // Cargar tareas\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(`${API_URL}/tasks`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      if (!response.ok) throw new Error('Error cargando tareas');\n      const tasksData = await response.json();\n      setTasks(tasksData);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  React.useEffect(() => {\n    fetchTasks();\n  }, [token]);\n\n  // Actualizar tarea\n  const handleUpdate = async (taskId, updatedFields) => {\n    if (!taskId) {\n      setError('ID de tarea inválido');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/tasks/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(updatedFields),\n      });\n      if (!response.ok) throw new Error('Error actualizando tarea');\n      const updatedTask = await response.json();\n      setTasks(tasks.map(t => (t.id === taskId ? updatedTask : t)));\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Eliminar tarea\nconst handleDelete = async (taskId) => {\n  if (!taskId) {\n    setError('ID de tarea inválido');\n    return;\n  }\n  try {\n    const response = await fetch(`${API_URL}/tasks/${taskId}`, {\n      method: 'DELETE',\n      headers: { Authorization: `Bearer ${token}` }\n    });\n    if (!response.ok) throw new Error('Error eliminando tarea');\n    await response.json();\n    setTasks(prevTasks => prevTasks.filter(t => t.id !== taskId));\n    setError('');\n  } catch (err) {\n    setError(err.message);\n  }\n};\n\nconst [title, setTitle] = useState('');\nconst [description, setDescription] = useState('');\n\nconst handleCreate = async () => {\n  if (!title) {\n    setError('El título es obligatorio');\n    return;\n  }\n  try {\n    const response = await fetch(`${API_URL}/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ title, description }),\n    });\n    if (!response.ok) throw new Error('Error creando tarea');\n    const newTask = await response.json();\n    setTasks(prev => [...prev, newTask]);\n    setTitle('');\n    setDescription('');\n    setError('');\n  } catch (err) {\n    setError(err.message);\n  }\n};\n\n  return (\n    <div>\n      <h2>Dashboard de Tareas</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <ul>\n        {tasks.map(task => (\n          <li key={task.id}>\n            <strong>{task.title}</strong> - {task.status}\n            <p>{task.description}</p>\n            <button\n              onClick={() =>\n                handleUpdate(task.id, {\n                  status: 'En progreso',\n                  title: task.title,\n                  description: task.description,\n                })\n              }\n            >\n              En progreso\n            </button>\n            <button\n              onClick={() =>\n                handleUpdate(task.id, {\n                  status: 'Completadas',\n                  title: task.title,\n                  description: task.description,\n                })\n              }\n            >\n              Completar\n            </button>\n            <button onClick={() => handleDelete(task.id)}>Eliminar</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}